{"version":3,"sources":["components/Tree/Tree.js","components/Basic/Basic.js","components/Species/Species.js","components/AboutModel/AboutModel.js","components/Main/Main.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Tree","props","handleClickModel","e","auto","target","parentNode","textContent","split","model","onGetModel","className","Object","keys","data","length","obj","map","el","item","activeClassName","to","onClick","createTree","Basic","handleChange","value","prompt","onChangeValue","basic","onDoubleClick","Species","species","models","AboutModel","useLocation","pathname","toString","exact","path","aboutModel","Main","withRouter","React","useState","setAboutModel","setAuto","setData","isButtonSave","setIsButtonSave","isSave","setIsSave","saveHref","setSaveHref","saveDownload","setSaveDownload","useEffect","history","push","type","onChange","reader","FileReader","console","log","files","readAsText","onload","readerEvent","JSON","parse","result","accept","file","Blob","stringify","URL","createObjectURL","href","download","variableValue","producer","slice","join","property","returnAutoProperty","Number","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2dec29d.chunk.js","sourcesContent":["import './Tree.css';\nimport {NavLink} from \"react-router-dom\";\n\n\nfunction Tree(props) {\n\n  const handleClickModel = (e) => {\n    const auto = e.target.parentNode.textContent.split(' ')[0];\n    const model = e.target.textContent;\n    props.onGetModel(auto, model)\n  }\n\n  const createTree = (obj) => {\n    if(!Object.keys(obj)) return;\n    return Object.keys(obj).map((el) => {\n      return <li className=\"tree__list-auto\">{el} {Object.keys(obj[el]).map(item => <NavLink activeClassName=\"tree__list-auto_active\" to={`/${item}`} onClick={handleClickModel} className=\"tree__list-model\">{item}</NavLink>)}</li>\n    })\n  }\n\n  const handleOutPutTree = () => {\n    return (Object.keys(props.data).length ? createTree(props.data): 'Нет данных для отображения')\n  }\n\n  return (\n    <div className=\"tree\">\n      <ul className=\"tree__list\">\n        {handleOutPutTree()}\n      </ul>\n    </div>\n  );\n}\n\nexport default Tree;\n\n// const createTree = (obj) => {\n//   if(!Object.keys(obj)) return;\n//   return Object.keys(obj).map((el) => {\n//     return <li>{el} { Object.keys(obj[el]).length ?<ul>{createTree(obj[el])}</ul> : ''}</li>\n//   })\n// }","import './Basic.css';\nimport React from \"react\";\n\nfunction Basic(props) {\n\n  const handleChange = (e) => {\n    const value = prompt('Введите новое значение')\n    if(value) {\n      props.onChangeValue(e.target.textContent, value);\n      e.target.textContent = e.target.textContent.split(' ')[0] + ' - ' + value;\n    }\n  }\n\n  return (\n    <div className=\"basic\">\n      <ul className=\"about-model__list\">\n        {Object.keys(props.basic).map((el) => {\n          if(typeof props.basic[el] !== 'object')\n            return <li className=\"about-model__list-item about-model__list-item_basic\" onDoubleClick={handleChange}>{`${el} - ${props.basic[el]}`}</li>\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default Basic;","import './Species.css';\n\nfunction Species(props) {\n\n  return (\n    <div className=\"species\">\n      <ul className=\"about-model__list\">\n        {Object.keys(props.species.models).map(el => <li className=\"about-model__list-item\">{el}</li>)}\n      </ul>\n    </div>\n  );\n}\n\nexport default Species;","import './AboutModel.css';\nimport Basic from \"../Basic/Basic\";\nimport Species from \"../Species/Species\";\nimport { Route, NavLink, useLocation } from 'react-router-dom';\nfunction AboutModel(props) {\n  const location = useLocation();\n  const model = location.pathname.toString().split('/')[1]\n  return (\n    <div className=\"about-model\">\n      {model &&\n      <nav className=\"about-model__tabs\">\n        <NavLink exact to={`/${model}/basic`} activeClassName=\"about-model__tab_active\" className=\"about-model__tab\">Основные характеристики</NavLink>\n        <NavLink exact to={`/${model}/species`} activeClassName=\"about-model__tab_active\" className=\"about-model__tab\">Разновидности двигателей</NavLink>\n      </nav>\n      }\n      <div className=\"about-model__pages\">\n        <Route path={`/${model}/basic`}>\n          <Basic\n            basic={props.aboutModel}\n            onChangeValue={props.onChangeValue}\n          />\n        </Route>\n        <Route path={`/${model}/species`}>\n          <Species\n            species={props.aboutModel}\n          />\n        </Route>\n      </div>\n    </div>\n  );\n}\n\nexport default AboutModel;\n","import './Main.css';\nimport Tree from \"../Tree/Tree\";\nimport AboutModel from \"../AboutModel/AboutModel\";\nimport {Route} from \"react-router-dom\";\n\nfunction Main(props) {\n  return (\n    <div className=\"main\">\n      <Route path=\"/\">\n        <Tree\n          data={props.data}\n          onGetModel={props.onGetModel}\n        />\n        <AboutModel\n          auto={props.auto}\n          aboutModel={props.aboutModel}\n          onChangeValue={props.onChangeValue}\n        />\n      </Route>\n    </div>\n  );\n}\n\nexport default Main;","import './App.css';\nimport Main from \"../Main/Main\";\nimport React from \"react\";\nimport {withRouter} from 'react-router-dom';\nfunction App(props) {\n\n  const [aboutModel, setAboutModel] = React.useState({basic: {}, species: {}})\n  const [auto, setAuto] = React.useState('')\n  const [data, setData] = React.useState({})\n\n  const [isButtonSave, setIsButtonSave] = React.useState(false)\n  const [isSave, setIsSave] = React.useState(false)\n  const [saveHref, setSaveHref] = React.useState('')\n  const [saveDownload, setSaveDownload] = React.useState('')\n\n  const handleHideSaveLink = () => {\n    setIsSave(false);\n    setIsButtonSave(true)\n  }\n\n  const getModel = (auto, model) => {\n    setAuto(auto + ' ' + model)\n    setAboutModel(data[auto][model])\n  }\n\n  const returnAutoProperty = (value) => {\n    return value.split(' ')[0]\n  }\n\n  const handleChangeValue = (variableValue, value) => {\n    const producer = auto.split(' ')[0]\n    const model = auto.split(' ').slice(1).join(' ')\n    const property = returnAutoProperty(variableValue);\n    data[producer][model][property] = Number(value);\n  }\n\n  const handleSelectFile = (e) => {\n    const reader = new FileReader();\n    console.log(e.target.files[0].type)\n    reader.readAsText(e.target.files[0]);\n    reader.onload = (readerEvent) => {\n      setData(JSON.parse(readerEvent.target.result.toString()))\n    }\n    setIsButtonSave(true)\n  }\n\n  const handleSaveValues = () => {\n    setIsButtonSave(false)\n    const value = prompt('Введите название файла')\n    if(value) {\n      const file = new Blob(\n        [JSON.stringify(data)],\n        {type: 'application/json'})\n      setSaveHref(URL.createObjectURL(file))\n      setSaveDownload(value)\n      setIsSave(true)\n    }\n  }\n\n  React.useEffect(()=> {\n    props.history.push('/')\n  },[])\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__container\">\n        <div className=\"app__container-wrapper\">\n          <input type=\"file\" onChange={handleSelectFile} accept=\"application/json\"/>\n          {isButtonSave && <button type=\"button\" onClick={handleSaveValues}>Сохранить</button>}\n          {isSave && <a href={saveHref} download={saveDownload} onClick={handleHideSaveLink} className=\"app__link-save\">Скачать файл</a>}\n        </div>\n        <Main\n          data={data}\n          onGetModel={getModel}\n          aboutModel={aboutModel}\n          onChangeValue={handleChangeValue}\n          auto={auto}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}